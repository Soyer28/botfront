import { __rest } from "tslib";
import React from 'react';
import classnames from 'classnames';
import { connectField, filterDOMProps } from 'uniforms';
const Radio = (_a) => {
    var { allowedValues, checkboxes, // eslint-disable-line no-unused-vars
    className, disabled, error, errorMessage, id, label, name, onChange, required, showInlineError, transform, value } = _a, props = __rest(_a, ["allowedValues", "checkboxes", "className", "disabled", "error", "errorMessage", "id", "label", "name", "onChange", "required", "showInlineError", "transform", "value"]);
    return (React.createElement("div", Object.assign({ className: classnames(className, { disabled, error }, 'grouped fields') }, filterDOMProps(props)),
        label && (React.createElement("div", { className: classnames({ required }, 'field') },
            React.createElement("label", null, label))),
        allowedValues.map(item => (React.createElement("div", { className: "field", key: item },
            React.createElement("div", { className: "ui radio checkbox" },
                React.createElement("input", { checked: item === value, disabled: disabled, id: `${id}-${item}`, name: name, onChange: () => onChange(item), type: "radio" }),
                React.createElement("label", { htmlFor: `${id}-${item}` }, transform ? transform(item) : item))))),
        !!(error && showInlineError) && (React.createElement("div", { className: "ui red basic pointing label" }, errorMessage))));
};
export default connectField(Radio);
